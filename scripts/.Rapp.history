mb[1,1]
mb[1,2]
mb[1,3]
resulta=ma[2,1]*ma[1,2]*ma[1,3]*ma[1,4]*ma[4,5]*ma[4,6]*ma[1,7]*ma[4,8]*ma[4,9]*ma[4,10]
resultb=mb[2,1]*mb[1,2]*mb[1,3]*mb[1,4]*mb[4,5]*mb[4,6]*mb[1,7]*mb[4,8]*mb[4,9]*mb[4,10]
resulta
resultb
log(resulta/resultb)
t
mb
entroty<-function(x){return(x*4*log(x));}
sum(mb<-apply(mb,c(1,2),entropy))
entroty<-function(x){return(x*4*log(x,base=2));}
sum(mb<-apply(mb,c(1,2),entropy))
mb
t
A<-c(1,6,6,4,2,4,11,9,1,3)
C<-c(6,1,5,5,1,1,1,1,1,3)
G<-c(3,6,2,2,3,7,1,2,1,1)
T<-c(4,1,1,3,8,2,1,2,11,7)
mb<-data.frame(A,C,G,T)
mb
mb<-apply(mb,1,pro)
mb
sum(apply(mb,c(1,2),entropy))
mb
entropy<-function(x){return(x*4*log(x,base=2));}
sum(apply(mb,c(1,2),entropy))
log(2,base=2)
entropy(mb[1,1])
entropy<-function(x){return(x*4*log(x));}
sum(apply(mb,c(1,2),entropy))
entropy(mb[1,2])
entropy(mb[2,1])
mb
mb[1,2]
entropy(mb[1,2])
entropy<-function(x){return(x*log(4*x));}
sum(apply(mb,c(1,2),entropy))
dir()
library(seqLogo)
tmp<-read.table("Tmp/xianyao_Group5")
tmp<-read.table("/Tmp/xianyao_Group5")
tmp<-read.table("/Tmp/xianyao_Group5.txt")
tmp<-read.table("Tmp/xianyao_Group5.txt")
tmp
A<-tmp$V1
C<-tmp$V2
G<-tmp$V3
T<-tmp$V4
df<-data.frame(A,C,G,T)
df
df<-t(df)
df
seqLogo(df)
dev.copy(png,"xianyao_Group5.png")
dev.off()
tmp<-read.table("Tmp/xianyao_Group7.txt")
tmp
A<-tmp$V1
C<-tmp$V2
G<-tmp$V3
T<-tmp$V4
df<-data.frame(A,C,G,T)
df
df<-t(df)
df
seqLogo(df)
dev.copy(png,"xianyao_Group7.png")
dev.off()
dir()
tmp<-read.table("I692/YRB_Capstone/scripts/Group1.consensus")
tm<read.table("I692/YRB_Capstone/scripts/Group1_consensus_PFM.txt")
tmp<-read.table("I692/YRB_Capstone/scripts/Group1_consensus_PFM.txt")
tmp
A<-tmp$V1
C<-tmp$V2
G<-tmp$V3
T<-tmp$V4
df<-data.frame(A,C,G,T)
df
df<-t(df)
df
seqLogo
library(seqlogo)
library(seqLogo)
seqLogo(df)
dev.copy(png,'Group1.png')
dev.off()
tmp<-read.table("I692/YRB_Capstone/scripts/Group2_consensus_PFM.txt")
tmp
A<-tmp$V1,#
 C<-tmp$V2,#
 G<-tmp$V3,#
 T<-tmp$V4,#
 df<-data.frame(A,C,G,T)
A<-tmp$V1#
> C<-tmp$V2#
> G<-tmp$V3#
> T<-tmp$V4#
> df<-data.frame(A,C,G,T)
A<-tmp$V1#
 C<-tmp$V2#
 G<-tmp$V3#
 T<-tmp$V4#
 df<-data.frame(A,C,G,T)
A
C
G
df<-data.frame(A,C,G,T)
df<-t(df)
df
seqLogo(df)
dev.copy(png,"Group2.png")
dev.off()
tmp<-read.table("I692/YRB_Capstone/scripts/Group3_consensus_PFM.txt")
A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
  df<-data.frame(A,C,G,T)
df
tmp
df<-t(df)
seqLogo(df)
dev.copy(png,"Group3.png")
dev.off()
tmp<-read.table("I692/YRB_Capstone/scripts/Group4_consensus_PFM.txt")
A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
  df<-data.frame(A,C,G,T)
df
df<-t(df)
df
seqLogo(df)
dev.copy(png,"Group4.png")
dev.off()
tmp<-read.table("I692/YRB_Capstone/scripts/Group5_consensus_PFM.txt")
A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
  df<-data.frame(A,C,G,T)
df
tmp
df<-t(df)
seqLogo(df)
dev.copy(png,"Group5.png")
dev.off()
tmp<-read.table("I692/YRB_Capstone/scripts/Group6_consensus_PFM.txt")
A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
  df<-data.frame(A,C,G,T)
df<-t(df)
seqLogo(df)
dev.copy(png,"Group6.png")
dev.off()
tmp<-read.table("I692/YRB_Capstone/scripts/Group7_consensus_PFM.txt")
A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
  df<-data.frame(A,C,G,T)
df<-t(df)
seqLogo(df)
dev.copy(png,"Group7.png")
dev.off()
tmp<-read.table("I692/YRB_Capstone/scripts/Group8_consensus_PFM.txt")
A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
  df<-data.frame(A,C,G,T)
df<-t(df)
dev.copy(png,"Group7.png")
seqLogo(df)
dev.off()
seqLogo(df)
dev.copy(png,"Group8.png")
dev.off()
tmp<-read.table("I692/YRB_Capstone/scripts/Group7_consensus_PFM.txt")
A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
  df<-data.frame(A,C,G,T)
df<-t(df)
seqLogo(df)
dev.copy(png,"Group7.png")
dev.off()
tmp<-read.table("I692/YRB_Capstone/scripts/Group9_consensus_PFM.txt")
A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
  df<-data.frame(A,C,G,T)
df<-t(df)
seqLogo(df)
dev.copy(png,"Group9.png")
dev.off()
motif2meme <- function(inFile) {#
    library(tools)#
    #establishing the number of distinct motifs in the file and parsing it accordingly#
    stopifnot(is.character(inFile))#
    outFile <- paste(inFile,"meme",sep=".")#
    thisFile <- file(outFile)#
    fileName <- file_path_sans_ext(inFile)#
    #reading the input file#
    motif.file <- scan(file=inFile,character(0), sep="\n",quote=NULL)#
    motif.index <- grep(pattern="^>",motif.file)#
    n.motifs <- length(motif.index)#
    total.len <-  length(motif.file)#
    #print(n.motifs)#
    sink(thisFile,append=TRUE)#
    cat("MEME version 4\n\n",file=thisFile,append=TRUE)#
    cat("ALPHABET= ACGT\n\n",file=thisFile,append=TRUE)#
    cat("strands: + -\n\n")#
    nameSplit <- strsplit(fileName,"_")#
    nameNum <- nameSplit[[1]][1]#
    motifNum <- sub("^.....(..).*", "\\1", nameNum)  # fifth#
    for (i in 1:(n.motifs-1)) {#
        #print(i)#
        #print(" ")#
        (motif.index[i]+1) -> index.start#
        ((motif.index[i+1])-1) -> index.end#
        motif.file[index.start:index.end] -> this_motif#
                   strsplit(this_motif,split="\t") -> motif_split#
                   #print(head(motif_split))#
                   length(this_motif) -> motif_row#
                   array(NA,c(motif_row,4)) -> motif_array#
                   for (n in 1:motif_row) {#
                       as.numeric(motif_split[[n]]) -> motif_array[n,]#
                   }#
                   motif_array <- as.data.frame(motif_array)#
                   motif.file[motif.index[i]] -> header.string#
                   strsplit(header.string,split="[\t]") -> prob.string#
                   prob.string[[1]][6] -> prob.string2#
                   strsplit(prob.string2,"[:]") -> prob.string3#
                   prob.string3[[1]][4] -> this.p.val#
                   prob.string[[1]][2] -> name.string#
                   strsplit(name.string,split=",") -> name.string2#
                   name.string2[[1]][1] -> name.string3#
                   motif_name <- paste("motif",motifNum,i,sep="_")#
                   cat("MOTIF",motif_name,name.string3,"\n",file=thisFile, append=TRUE)#
                   cat("letter-probability matrix: ",file=thisFile, append=TRUE)#
                   cat("alength= 4 w=", motif_row, file=thisFile, append=TRUE)#
                   cat(" nsites= 20 ",file=thisFile, append=TRUE)#
                   cat("E= ",file=thisFile, append=TRUE)#
                   cat(this.p.val,"\n",file=thisFile, append=TRUE)#
                   write.table(motif_array,file=thisFile,append=TRUE,col.names=FALSE,row.names=FALSE,sep="\t")#
                   cat("\n",file=thisFile, append=TRUE)#
    }#
        (motif.index[n.motifs]+1) -> index.start#
        total.len -> index.end#
        motif.file[index.start:index.end] -> this_motif#
                   strsplit(this_motif,split="\t") -> motif_split#
                   #print(head(motif_split))#
                   length(this_motif) -> motif_row#
                   array(NA,c(motif_row,4)) -> motif_array#
                   for (n in 1:motif_row) {#
                       as.numeric(motif_split[[n]]) -> motif_array[n,]#
                   }#
                   motif_array <- as.data.frame(motif_array)#
                   motif.file[motif.index[i]] -> header.string#
                   strsplit(header.string,split="[\t]") -> prob.string#
                   prob.string[[1]][6] -> prob.string2#
                   strsplit(prob.string2,"[:]") -> prob.string3#
                   prob.string3[[1]][4] -> this.p.val#
                   prob.string[[1]][2] -> name.string#
                   strsplit(name.string,split=",") -> name.string2#
                   name.string2[[1]][1] -> name.string3#
                   motif_name <- paste("motif",motifNum,i,sep="_")#
                   cat("MOTIF",motif_name,name.string3,"\n",file=thisFile, append=TRUE)#
                   cat("letter-probability matrix: ",file=thisFile, append=TRUE)#
                   cat("alength= 4 w=", motif_row, file=thisFile, append=TRUE)#
                   cat(" nsites= 20 ",file=thisFile, append=TRUE)#
                   cat("E= ",file=thisFile, append=TRUE)#
                   cat(this.p.val,"\n",file=thisFile, append=TRUE)#
                   write.table(motif_array,file=thisFile,append=TRUE,col.names=FALSE,row.names=FALSE,sep="\t")#
                   cat("\n",file=thisFile, append=TRUE)#
   sink()#
   close(thisFile) #
   print("matrix has been converted to MEME")#
}
motif2meme("I692/YRB_Capstone/data/Train_motifs_all.txt")
motif2meme <- function(inFile) {#
    library(tools)#
    #establishing the number of distinct motifs in the file and parsing it accordingly#
    stopifnot(is.character(inFile))#
    outFile <- paste(inFile,"meme",sep=".")#
    thisFile <- file(outFile)#
    fileName <- file_path_sans_ext(inFile)#
    #reading the input file#
    motif.file <- scan(file=inFile,character(0), sep="\n",quote=NULL)#
    motif.index <- grep(pattern="^>",motif.file)#
    n.motifs <- length(motif.index)#
    total.len <-  length(motif.file)#
    #print(n.motifs)#
    sink(thisFile,append=TRUE)#
    cat("MEME version 4\n\n",file=thisFile,append=TRUE)#
    cat("ALPHABET= ACGT\n\n",file=thisFile,append=TRUE)#
    cat("strands: + -\n\n")#
    nameSplit <- strsplit(fileName,"_")#
    nameNum <- nameSplit[[1]][1]#
    motifNum <- sub("^.....(..).*", "\\1", nameNum)  # fifth#
    for (i in 1:(n.motifs-1)) {#
        #print(i)#
        #print(" ")#
        (motif.index[i]+1) -> index.start#
        ((motif.index[i+1])-1) -> index.end#
        motif.file[index.start:index.end] -> this_motif#
                   strsplit(this_motif,split="\t") -> motif_split#
                   #print(head(motif_split))#
                   length(this_motif) -> motif_row#
                   array(NA,c(motif_row,4)) -> motif_array#
                   for (n in 1:motif_row) {#
                       as.numeric(motif_split[[n]]) -> motif_array[n,]#
                   }#
                   motif_array <- as.data.frame(motif_array)#
                   motif.file[motif.index[i]] -> header.string#
                   strsplit(header.string,split="[\t]") -> prob.string#
                   prob.string[[1]][6] -> prob.string2#
                   strsplit(prob.string2,"[:]") -> prob.string3#
                   prob.string3[[1]][4] -> this.p.val#
                   prob.string[[1]][2] -> name.string#
                   strsplit(name.string,split=",") -> name.string2#
                   name.string2[[1]][1] -> name.string3#
                   motif_name <- paste("motif",motifNum,i,sep="_")#
                   cat("MOTIF",motif_name,name.string3,"\n",file=thisFile, append=TRUE)#
                   cat("letter-probability matrix: ",file=thisFile, append=TRUE)#
                   cat("alength= 4 w=", motif_row, file=thisFile, append=TRUE)#
                   cat(" nsites= 20 ",file=thisFile, append=TRUE)#
                   cat("E= ",file=thisFile, append=TRUE)#
                   cat(this.p.val,"\n",file=thisFile, append=TRUE)#
                   write.table(motif_array,file=thisFile,append=TRUE,col.names=FALSE,row.names=FALSE,sep="\t")#
                   cat("\n",file=thisFile, append=TRUE)#
    }#
        (motif.index[n.motifs]+1) -> index.start#
        total.len -> index.end#
        motif.file[index.start:index.end] -> this_motif#
                   strsplit(this_motif,split="\t") -> motif_split#
                   #print(head(motif_split))#
                   length(this_motif) -> motif_row#
                   array(NA,c(motif_row,4)) -> motif_array#
                   for (n in 1:motif_row) {#
                       as.numeric(motif_split[[n]]) -> motif_array[n,]#
                   }#
                   motif_array <- as.data.frame(motif_array)#
                   motif.file[motif.index[i]] -> header.string#
                   strsplit(header.string,split="[\t]") -> prob.string#
                   prob.string[[1]][6] -> prob.string2#
                   strsplit(prob.string2,"[:]") -> prob.string3#
                   prob.string3[[1]][4] -> this.p.val#
                   prob.string[[1]][2] -> name.string#
                   strsplit(name.string,split=",") -> name.string2#
                   name.string2[[1]][1] -> name.string3#
                   motif_name <- paste("motif",motifNum,i,sep="_")#
                   cat("MOTIF",motif_name,name.string3,"\n",file=thisFile, append=TRUE)#
                   cat("letter-probability matrix: ",file=thisFile, append=TRUE)#
                   cat("alength= 4 w=", motif_row, file=thisFile, append=TRUE)#
                   cat(" nsites= 20 ",file=thisFile, append=TRUE)#
                   cat("E= ",file=thisFile, append=TRUE)#
                   cat(this.p.val,"\n",file=thisFile, append=TRUE)#
                   write.table(motif_array,file=thisFile,append=TRUE,col.names=FALSE,row.names=FALSE,sep="\t")#
                   cat("\n",file=thisFile, append=TRUE)#
   sink()#
   close(thisFile) #
   print("matrix has been converted to MEME")#
}
motif2meme("I692/YRB_Capstone/data/Train_motifs_all.txt")
source(https://gist.githubusercontent.com/rtraborn/e395776b965398c54c4d/raw/bbc0c83a9aa1055f5ccc172c3a2da519716683ba/motif2meme.R)
source("https://gist.githubusercontent.com/rtraborn/e395776b965398c54c4d/raw/bbc0c83a9aa1055f5ccc172c3a2da519716683ba/motif2meme.R")
motif2meme("I692/YRB_Capstone/data/Train_motifs_all.txt")
traceback()
source("https://gist.githubusercontent.com/rtraborn/e395776b965398c54c4d/raw/bbc0c83a9aa1055f5ccc172c3a2da519716683ba/motif2meme.R")
motif2meme("I692/YRB_Capstone/data/Train_motifs_all.txt")
getwd()
dir()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_raw/Group1.consensus.txt")
tmp
A<-tmp$V1
C<-tmp$V2
G<-tmp$V3
T<-tmp$V4
df<-(A,C,G,T)
df<-data.frame(A,C,G,T)
df
df<-t(df)
seqLogo(df)
library(seqLogo)
seqLogo(df)
dev.copy(png,"Group1.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_raw/Group2.consensus.txt")
A<-tmp$V1
C<-tmp$V2
G<-tmp$V3
T<-tmp$V4
df<-data.frame(A,C,G,T)
df<-t(df)
seqLogo(df)
dev.copy(png,"Group2.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_raw/Group3.consensus.txt")
A<-tmp$V1#
 C<-tmp$V2#
 G<-tmp$V3#
 T<-tmp$V4#
df<-data.frame(A,C,G,T)#
 df<-t(df)#
seqLogo(df)
dev.copy(png,"Group3.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_raw/Group4.consensus.txt")#
 A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
 df<-data.frame(A,C,G,T)#
  df<-t(df)#
 seqLogo(df)#
 dev.copy(png,"Group4.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_raw/Group5.consensus.txt")#
 A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
 df<-data.frame(A,C,G,T)#
  df<-t(df)#
 seqLogo(df)#
 dev.copy(png,"Group5.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_raw/Group6.consensus.txt")#
 A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
 df<-data.frame(A,C,G,T)#
  df<-t(df)#
 seqLogo(df)#
 dev.copy(png,"Group6.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_raw/Group7.consensus.txt")#
 A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
 df<-data.frame(A,C,G,T)#
  df<-t(df)#
 seqLogo(df)#
 dev.copy(png,"Group7.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_raw/Group8.consensus.txt")#
 A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
 df<-data.frame(A,C,G,T)#
  df<-t(df)#
 seqLogo(df)#
 dev.copy(png,"Group8.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_raw/Group9.consensus.txt")#
 A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
 df<-data.frame(A,C,G,T)#
  df<-t(df)#
 seqLogo(df)#
 dev.copy(png,"Group9.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_raw/Group10.consensus.txt")#
 A<-tmp$V1#
  C<-tmp$V2#
  G<-tmp$V3#
  T<-tmp$V4#
 df<-data.frame(A,C,G,T)#
  df<-t(df)#
 seqLogo(df)#
 dev.copy(png,"Group10.png")
dev.off()
0.131   0.048   0.722   0.098   G       0.736#
0.043   0.056   0.880   0.022   G       1.290#
0.221   0.012   0.747   0.020   G       1.016#
0.037   0.001   0.042   0.921   T       1.512#
0.145   0.157   0.471   0.227   N       0.180#
0.743   0.020   0.208   0.029   A       0.948#
0.024   0.157   0.462   0.358   K       0.407#
0.495   0.435   0.040   0.030   M       0.635#
0.901   0.024   0.040   0.035   A       1.382#
0.918   0.025   0.040   0.016   A       1.471#
0.738   0.256   0.006   0.001   A       1.121#
0.827   0.059   0.089   0.025   A       1.091
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group1.consensus.txt")#
>  A<-tmp$V1#
>   C<-tmp$V2#
>   G<-tmp$V3#
>   T<-tmp$V4#
>  df<-data.frame(A,C,G,T)#
>   df<-t(df)#
>  seqLogo(df)#
>  #
>  dev.copy(png,"./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group1.png")
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group1.consensus.txt")#
  A<-tmp$V1#
  C<-tmp$V2#
   G<-tmp$V3#
   T<-tmp$V4#
  df<-data.frame(A,C,G,T)#
   df<-t(df)#
  seqLogo(df)#
  dev.copy(png,"./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group1.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group2.consensus.txt")#
  A<-tmp$V1#
  C<-tmp$V2#
   G<-tmp$V3#
   T<-tmp$V4#
  df<-data.frame(A,C,G,T)#
   df<-t(df)#
  seqLogo(df)#
  dev.copy(png,"./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group2.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group3.consensus.txt")#
  A<-tmp$V1#
  C<-tmp$V2#
   G<-tmp$V3#
   T<-tmp$V4#
  df<-data.frame(A,C,G,T)#
   df<-t(df)#
  seqLogo(df)#
  dev.copy(png,"./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group3.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group4.consensus.txt")#
  A<-tmp$V1#
  C<-tmp$V2#
   G<-tmp$V3#
   T<-tmp$V4#
  df<-data.frame(A,C,G,T)#
   df<-t(df)#
  seqLogo(df)#
  dev.copy(png,"./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group4.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group5.consensus.txt")#
  A<-tmp$V1#
  C<-tmp$V2#
   G<-tmp$V3#
   T<-tmp$V4#
  df<-data.frame(A,C,G,T)#
   df<-t(df)#
  seqLogo(df)#
  dev.copy(png,"./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group5.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group6.consensus.txt")#
  A<-tmp$V1#
  C<-tmp$V2#
   G<-tmp$V3#
   T<-tmp$V4#
  df<-data.frame(A,C,G,T)#
   df<-t(df)#
  seqLogo(df)#
  dev.copy(png,"./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group6.png")
dev.off()
tmp<-read.table("./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group7.consensus.txt")#
  A<-tmp$V1#
  C<-tmp$V2#
   G<-tmp$V3#
   T<-tmp$V4#
  df<-data.frame(A,C,G,T)#
   df<-t(df)#
  seqLogo(df)#
  dev.copy(png,"./I692/YRB_Capstone/results/CompThreshold/tomtom_threshold/Group7.png")
dev.off()
source("I692/YRB_Capstone/scripts/motif2meme.R")
motif2meme()
dir()
source("I692/YRB_Capstone/scripts/motif2meme.R")
motif2meme("I692/YRB_Capstone/data/Train_motifs_all.txt")
dir()
source("I692/YRB_Capstone/scripts/motif2meme.R")
motif2meme("I692/YRB_Capstone/data/sample.txt")
setwd("I692/YRB_Capstone/scripts/")
dir()
dir()
pwd()
ls
ls()
source motif2meme
source(motif2meme)
source(motif2meme.R)
source("motif2meme.R")
motif2meme("../data/sample.txt","../data/sample.meme")
